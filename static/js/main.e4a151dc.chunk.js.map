{"version":3,"sources":["reportWebVitals.js","card.js","cardlist.js","searchbox.js","scroll.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","react_default","a","createElement","className","src","concat","width","height","Cardlist","robots","cardArray","map","user","i","card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","console","log","style","overflow","border","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_this2","fetch","response","json","users","_this3","filteredrobots","filter","robot","toLowerCase","includes","length","searchbox","src_scroll","cardlist","React","Component","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"8KAYeA,eAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,0CCOCY,SAZF,SAAAN,GAAsB,IAApBO,EAAoBP,EAApBO,GAAKC,EAAeR,EAAfQ,KAAMC,EAAST,EAATS,MACtB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAG,wBAAAC,OAA0BR,EAA1B,KAAkCS,MAAM,MACvDC,OAAO,QACAP,EAAAC,EAAAC,cAAA,WAAMJ,GACNE,EAAAC,EAAAC,cAAA,SAAIH,MCsBDS,EA1BE,SAAAlB,GAAgB,IAAbmB,EAAanB,EAAbmB,OAEVC,EAAYD,EAAOE,IAAI,SAACC,EAAMC,GAChC,OAAOb,EAAAC,EAAAC,cAACY,EAAD,CACPC,IAAMF,EACNhB,GAAIY,EAAOI,GAAGhB,GACdC,KAAMW,EAAOI,GAAGf,KAChBC,MAAOU,EAAOI,GAAGd,UASrB,OACIC,EAAAC,EAAAC,cAAA,WACKQ,ICJEM,EAfG,SAAA1B,GAAkCA,EAAhC2B,YAAgC,IAAlBC,EAAkB5B,EAAlB4B,aAC9B,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SACIC,UAAU,mCACVgB,KAAK,SACLC,YAAY,cACZC,SAAUH,MCKVI,EAZF,SAACC,GAEX,OADAC,QAAQC,IAAIF,GAIRvB,EAAAC,EAAAC,cAAA,OAAMwB,MAAO,CAACC,SAAW,SAAWpB,OAAS,QAASqB,OAAS,oBACzDL,EAAMM,WCmDLC,qBAjDX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAaJI,eAAiB,SAACC,GAGdR,EAAKS,SAAS,CAAEvB,YAAasB,EAAME,OAAOC,SAf1CX,EAAKY,MAAQ,CACTlC,OAAQ,GACRQ,YAAa,IAJPc,mFASM,IAAAa,EAAAV,KAChBW,MAAM,8CACDzD,KAAK,SAAA0D,GAAQ,OAAIA,EAASC,SAC1B3D,KAAK,SAAA4D,GAAK,OAAIJ,EAAKJ,SAAS,CAAE/B,OAAQuC,uCAYtC,IAAAC,EAAAf,KACCgB,EAAiBhB,KAAKS,MAAMlC,OAAO0C,OAAO,SAAAC,GAC5C,OAAOA,EAAMtD,KAAKuD,cAAcC,SAASL,EAAKN,MAAM1B,YAAYoC,iBAKpE,OAAWnB,KAAKS,MAAMlC,OAAO8C,OACzBvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,gBACAH,EAAAC,EAAAC,cAACsD,EAAD,CAAWtC,aAAcgB,KAAKI,iBAE9BtC,EAAAC,EAAAC,cAACuD,EAAD,KACQzD,EAAAC,EAAAC,cAACwD,EAAD,CAAUjD,OAAQyC,KAL9B,+CADkClD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAd,kBAjC5BwD,IAAMC,YCEXC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjE,EAAAC,EAAAC,cAACF,EAAAC,EAAMiE,WAAP,KAEAlE,EAAAC,EAAAC,cAACiE,EAAD,QAQFpF","file":"static/js/main.e4a151dc.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({id , name, email})=>{\n    return(\n        <div className='tc bg-light-green dib br pa3 ma2 grow bw2 shadow-5'>\n            <img src={`https://robohash.org/${id} `}  width=\"200\" \n     height=\"200\"/>\n            <div>{name}</div>\n            <p>{email}</p>\n\n        </div>\n    )\n}\n\nexport default Card   ;\n","import { map } from \"lodash\";\nimport React from \"react\";\nimport Card from \"./card\";\n\nconst Cardlist = ({ robots }) => {\n\n    const cardArray = robots.map((user, i) => {\n        return <Card\n        key ={i}\n        id={robots[i].id}\n        name={robots[i].name} \n        email={robots[i].email} />\n    }\n    \n    )\n\n    \n    \n\n    // card i is an array here \n    return (\n        <div >\n            {cardArray}\n        </div>\n\n        // we can put map itself inside \n    )\n\n}\n\nexport default Cardlist;","import React from \"react\";\n\n \nconst SearchBox = ({searchfield , searchChange}) => {\n    return (\n        <div className=\"pa2\">\n            <input\n                className=\"pa3 ba b--green bg-lightest-blue\" \n                type='search'\n                placeholder='search robo' \n                onChange={searchChange} // function calling \n                //search change function is a prop \n                // that is definded in the app \n            />\n        </div>\n    );\n}\n\nexport default SearchBox ; ","import React from 'react';\n\n\nconst Scroll =(props)=>{\n    console.log(props);\n    return (\n        \n    \n        <div  style={{overflow : 'scroll' , height : '800px' ,border : '2px solid black'}}>\n            { props.children}\n        \n        </div>\n    )\n}\n\nexport default  Scroll ;","import React from \"react\";\nimport Cardlist from \"./cardlist\";\nimport SearchBox from \"./searchbox.js\";\nimport Scroll from \"./scroll.js\"\nimport './App.css'\n\n\n\n// in ordere to use state we need to use class\nclass App extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users  }));\n    }\n    onSearchChange = (event) => {\n        // console.log(event.target.value );\n\n        this.setState({ searchfield: event.target.value });\n\n        // console.log(filteredrobots);\n    }\n\n\n\n    render() {\n        const filteredrobots = this.state.robots.filter(robot => {\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n\n \n         \n        return ( (!this.state.robots.length )?<h1 className='f1'>Loading</h1>:\n            <div className=\"tc\">\n                <h1 className='f1'>Robo Friends</h1>\n                <SearchBox searchChange={this.onSearchChange} />\n\n                <Scroll> \n                        <Cardlist robots={filteredrobots} />\n                </Scroll>\n\n                // scroll has \n                console.log(\"pp too small \");\n                \n            </div>\n        );\n    }\n\n}\n\nexport default App;  ","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport 'tachyons';\nimport {robots} from './robots';\n \n\n \nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n\n  <App/>\n \n   </React.StrictMode>\n);\n// all thsi says is render app in root id \n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}